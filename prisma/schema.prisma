// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // pooled (runtime)
  directUrl = env("DIRECT_URL") // sin pool (migraciones)
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  emailVerified DateTime?
  name          String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
  Customer      Customer?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  user              User    @relation(fields: [userId], references: [id])
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  data      Json     @default("{}")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

// ---- Capturas del formulario de la landing ----
model Lead {
  id          String   @id @default(cuid())
  email       String
  source      String? // "marketing_clean" por defecto (desde el API)
  utmSource   String?
  utmMedium   String?
  utmCampaign String?
  ip          String?
  userAgent   String?
  createdAt   DateTime @default(now())

  @@unique([email, source], name: "email_source")
  @@index([createdAt])
}

// ---- Registro de clientes (usuarios que se loguean) ----
model Customer {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  email         String?   @unique
  firstLoginAt  DateTime?
  lastLoginAt   DateTime?
  signInCount   Int       @default(0)
  source        String?
  lastIp        String?
  lastUserAgent String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
