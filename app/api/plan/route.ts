/* eslint-disable @typescript-eslint/no-explicit-any */
export const runtime = "edge";

import OpenAI from "openai";
const client = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

function json(obj: any, status = 200) {
  return new Response(JSON.stringify(obj), {
    status,
    headers: { "Content-Type": "application/json" },
  });
}

// --- helpers ---
function pickJson(s: string) {
  const i = s.indexOf("{");
  const j = s.lastIndexOf("}");
  if (i >= 0 && j > i) {
    try { return JSON.parse(s.slice(i, j + 1)); } catch {}
  }
  return null;
}
function limitWords(text: string, maxWords = 120) {
  const words = (text || "").trim().split(/\s+/);
  return words.length <= maxWords ? (text || "").trim() : words.slice(0, maxWords).join(" ") + "â€¦";
}
type RegulationRow = {
  area: string; que_aplica: string; requisito: string;
  plazo: string; riesgo: string; accion: string;
};
function dedupReg(rows: RegulationRow[]) {
  const seen = new Set<string>();
  return rows.filter(r => {
    const k = (r.area + "|" + r.que_aplica).toLowerCase();
    if (seen.has(k)) return false;
    seen.add(k);
    return true;
  });
}

// ðŸ”§ Ajustes por rubro (10 categorÃ­as comunes)
function augmentRegulacionPorRubro(rubro: string, rows: RegulationRow[]) {
  const r = (rubro || "").toLowerCase();
  const push = (x: RegulationRow) => rows.push(x);

  // 1) AsesorÃ­as / Servicios profesionales
  if (/asesor|consultor|servicio profesional|mentori|coaching/.test(r)) {
    push({ area:"Contratos", que_aplica:"PrestaciÃ³n de servicios", requisito:"Contrato tipo + clÃ¡usula de propiedad intelectual", plazo:"Previo a vender", riesgo:"Medio", accion:"Usar contrato estÃ¡ndar con cesiÃ³n de IP" });
    push({ area:"Seguros", que_aplica:"Responsabilidad civil profesional", requisito:"PÃ³liza RC si atiendes empresas", plazo:"Mes 1â€“3", riesgo:"Bajo", accion:"Cotizar pÃ³liza RC" });
  }
  // 2) Tienda fÃ­sica (retail)
  if (/tienda|retail|local comercial|boutique|kiosco/.test(r)) {
    push({ area:"Municipal", que_aplica:"Patente comercial y uso de suelo", requisito:"Patente municipal vigente", plazo:"Antes de abrir", riesgo:"Medio", accion:"Tramitar patente" });
    push({ area:"Consumo", que_aplica:"InformaciÃ³n al consumidor", requisito:"Precios visibles + libro de reclamos", plazo:"Apertura", riesgo:"Bajo", accion:"Habilitar seÃ±alÃ©tica/libro" });
  }
  // 3) E-commerce / Tienda online
  if (/e-?commerce|tienda online|marketplace|venta online|shopify|woocommerce/.test(r)) {
    push({ area:"Consumo", que_aplica:"Retracto/garantÃ­a legal", requisito:"PolÃ­tica clara de cambios y devoluciones", plazo:"Lanzamiento", riesgo:"Medio", accion:"Publicar polÃ­tica en TOS" });
    push({ area:"Datos", que_aplica:"Cookies y tracking", requisito:"Banner cookies + PP", plazo:"Lanzamiento", riesgo:"Medio", accion:"Implementar banner y polÃ­tica" });
    push({ area:"Pagos", que_aplica:"Medios de pago", requisito:"Contrato con PSP (Stripe/Transbank) + antifraude", plazo:"Lanzamiento", riesgo:"Medio", accion:"Activar 3DS/monitoring" });
  }
  // 4) Restaurante / Bar / Foodtruck
  if (/restaurante|restaurant|bar|food ?truck|comida|gastronom/.test(r)) {
    push({ area:"Sanitaria", que_aplica:"ManipulaciÃ³n de alimentos", requisito:"ResoluciÃ³n sanitaria Seremi", plazo:"30â€“60 dÃ­as", riesgo:"Alto", accion:"Tramitar resoluciÃ³n y BPM" });
    push({ area:"Residuos", que_aplica:"Aceites/RS", requisito:"Gestor autorizado", plazo:"Lanzamiento", riesgo:"Medio", accion:"Contratar gestor" });
    push({ area:"Alcoholes", que_aplica:"Patente alcoholes", requisito:"Patente si corresponde", plazo:"Previo a vender", riesgo:"Medio", accion:"Solicitar patente" });
  }
  // 5) CafeterÃ­a / PanaderÃ­a
  if (/cafeter[iÃ­]a|cafe|panader[iÃ­]a|pasteler[iÃ­]a/.test(r)) {
    push({ area:"Sanitaria", que_aplica:"BPM y control de temperaturas", requisito:"Protocolos y registros", plazo:"Lanzamiento", riesgo:"Medio", accion:"Implementar plan BPM" });
  }
  // 6) Salud / Belleza
  if (/salud|cl[iÃ­]nica|kine|spa|est[eÃ©]tica|barber[iÃ­]a|peluquer[iÃ­]a/.test(r)) {
    push({ area:"HabilitaciÃ³n", que_aplica:"TÃ­tulos/licencias", requisito:"Profesional habilitado + registro", plazo:"Previo a operar", riesgo:"Alto", accion:"Verificar tÃ­tulos y permisos" });
    push({ area:"Bioseguridad", que_aplica:"EsterilizaciÃ³n/residuos", requisito:"Protocolos y EPP", plazo:"Lanzamiento", riesgo:"Alto", accion:"Implementar protocolo" });
    push({ area:"Privacidad", que_aplica:"Datos sensibles", requisito:"Consentimiento informado", plazo:"Lanzamiento", riesgo:"Medio", accion:"Modelos de consentimiento" });
  }
  // 7) EducaciÃ³n / Cursos / Coaching
  if (/educaci[oÃ³]n|curso|academia|capacita|taller|coaching/.test(r)) {
    push({ area:"Propiedad intelectual", que_aplica:"Contenidos/licencias", requisito:"Licencias del material didÃ¡ctico", plazo:"Previo a vender", riesgo:"Bajo", accion:"Definir licencias/cesiones" });
    push({ area:"SENCE/Certif.", que_aplica:"Programas formales", requisito:"InscripciÃ³n si aplica", plazo:"0â€“6 meses", riesgo:"Bajo", accion:"Evaluar SENCE/certificaciÃ³n" });
    push({ area:"Menores", que_aplica:"ProtecciÃ³n a menores", requisito:"PolÃ­tica y consentimiento", plazo:"Lanzamiento", riesgo:"Medio", accion:"PolÃ­tica de menores" });
  }
  // 8) Software / SaaS
  if (/saas|software|app|plataforma|tecnolog[iÃ­]a|ia|inteligencia artificial/.test(r)) {
    push({ area:"Datos personales", que_aplica:"DPA con proveedores", requisito:"Contratos (OpenAI, analytics, correo)", plazo:"Lanzamiento", riesgo:"Medio", accion:"Firmar DPA / transferencias" });
    push({ area:"Seguridad", que_aplica:"Disponibilidad y backups", requisito:"SLA + backups + logs", plazo:"Lanzamiento", riesgo:"Medio", accion:"Definir RTO/RPO y monitoreo" });
    push({ area:"Prop. intelectual", que_aplica:"CÃ³digo y marcas", requisito:"Registro de marca; control OSS", plazo:"0â€“6 meses", riesgo:"Bajo", accion:"Registrar marca y SBOM" });
  }
  // 9) Fintech / Pagos / CrÃ©ditos
  if (/fintech|pago|wallet|cr[eÃ©]dito|pr[eÃ©]stamo|cripto|broker/.test(r)) {
    push({ area:"Financiera", que_aplica:"KYC/AML", requisito:"PolÃ­ticas y monitoreo", plazo:"Lanzamiento", riesgo:"Alto", accion:"Implementar KYC/AML" });
    push({ area:"RegulaciÃ³n", que_aplica:"Licencia/registro CMF (segÃºn modelo)", requisito:"AnÃ¡lisis regulatorio", plazo:"Previo a operar", riesgo:"Alto", accion:"AsesorÃ­a regulatoria" });
    push({ area:"Seguridad", que_aplica:"Fraude/chargebacks", requisito:"Antifraude", plazo:"Lanzamiento", riesgo:"Medio", accion:"Configurar 3DS, lÃ­mites y alertas" });
  }
  // 10) Transporte / LogÃ­stica / Delivery
  if (/transporte|log[iÃ­]stica|delivery|reparto|mensajer[iÃ­]a/.test(r)) {
    push({ area:"Permisos", que_aplica:"HabilitaciÃ³n vehÃ­culos/empresa", requisito:"Permisos MTT/municipales", plazo:"Previo a operar", riesgo:"Medio", accion:"Tramitar permisos" });
    push({ area:"Seguros", que_aplica:"MercancÃ­a y RC", requisito:"PÃ³lizas obligatorias", plazo:"Lanzamiento", riesgo:"Medio", accion:"Contratar pÃ³lizas" });
    push({ area:"Datos", que_aplica:"GeolocalizaciÃ³n", requisito:"PolÃ­tica y minimizaciÃ³n", plazo:"Lanzamiento", riesgo:"Bajo", accion:"Definir retenciÃ³n/acceso" });
  }

  return rows;
}

export async function POST(req: Request) {
  if (!process.env.OPENAI_API_KEY) {
    return json({ ok: false, error: "OPENAI_API_KEY missing" }, 500);
  }

  const { input = {} } = (await req.json().catch(() => ({ input: {} }))) as any;
  const model = process.env.OPENAI_MODEL || "gpt-4o-mini";

  // Prompt: pedimos plan100 + steps + competencia + regulacion (JSON estricto)
  const system = `
Eres consultor de negocios. Devuelve SOLO un JSON vÃ¡lido (sin texto extra).
Esquema requerido:
{
  "title": string,
  "plan100": string,        // pÃ¡rrafo Ãºnico, â‰¤120 palabras
  "steps": string[],        // 4â€“6 pasos accionables
  "competencia": [
    { "empresa": "string", "ciudad": "string", "segmento": "string",
      "propuesta": "string", "precio": "string", "canal": "string",
      "switching_cost": "Bajo|Medio|Alto", "moat": "string" }
  ],
  "regulacion": [
    { "area":"string", "que_aplica":"string", "requisito":"string",
      "plazo":"string", "riesgo":"Bajo|Medio|Alto", "accion":"string" }
  ]
}
Reglas:
- No incluyas URLs ni comentarios fuera del JSON.
- En 'competencia', si no hay marcas confiables, usa tipologÃ­as (Apps IA, Consultores, Agencias, DIY, etc.) rellenando todos los campos.
`;

  const user = [
    `Idea: ${input.idea ?? ""}`,
    `UbicaciÃ³n: ${input.ubicacion ?? ""}`,
    `Rubro: ${input.rubro ?? ""}`,
    input.ingresosMeta ? `Meta ingresos (CLP/mes): ${input.ingresosMeta}` : "",
    input.ticket ? `Ticket (CLP): ${input.ticket}` : "",
    input.costoUnit ? `Costo unitario (CLP): ${input.costoUnit}` : "",
    input.gastosFijos ? `Gastos fijos (CLP/mes): ${input.gastosFijos}` : "",
    input.marketingMensual ? `Marketing (CLP/mes): ${input.marketingMensual}` : "",
    "",
    "Devuelve el JSON EXACTO con el esquema anterior.",
  ].filter(Boolean).join("\n");

  try {
    const r = await client.chat.completions.create({
      model,
      temperature: 0.2,
      response_format: { type: "json_object" },
      messages: [{ role: "system", content: system }, { role: "user", content: user }],
      max_tokens: 900,
    });

    const raw = r.choices?.[0]?.message?.content?.trim() ?? "";
    if (!raw) return json({ ok: false, error: "empty_output_text" }, 502);

    const data = pickJson(raw) ?? {};

    // --- NormalizaciÃ³n salida ---
    const title: string = (data.title || "Plan").toString();
    const steps: string[] = Array.isArray(data.steps)
      ? data.steps.map((s: any) => (s ?? "").toString()).filter(Boolean).slice(0, 6)
      : [];

    let plan100: string = (data.plan100 || data.summary || "").toString();
    plan100 = limitWords(plan100, 120);

    const rubro = String(input.rubro || "negocio");
    const ciudad = String(input.ubicacion || "tu ciudad");

    // Competencia: si no viene, tipologÃ­as por defecto
    let competencia = Array.isArray(data.competencia) ? data.competencia : [];
    if (competencia.length === 0) {
      competencia = [
        { empresa: "Apps de evaluaciÃ³n con IA", ciudad, segmento: rubro, propuesta: "Velocidad y bajo costo", precio: "$3â€“7 mil", canal: "Web", switching_cost: "Bajo", moat: "UX/automatizaciÃ³n" },
        { empresa: "Consultores independientes", ciudad, segmento: rubro, propuesta: "AsesorÃ­a personalizada", precio: "$20â€“100 mil", canal: "LinkedIn/redes", switching_cost: "Medio", moat: "ReputaciÃ³n" },
        { empresa: "Agencias de innovaciÃ³n", ciudad, segmento: rubro, propuesta: "Programas/talleres", precio: "$200 mil+/mes", canal: "B2B", switching_cost: "Alto", moat: "Relaciones" },
        { empresa: "Plantillas/DIY (Notion/Gumroad)", ciudad, segmento: rubro, propuesta: "Hazlo tÃº mismo", precio: "$5â€“15 mil", canal: "Marketplace", switching_cost: "Bajo", moat: "Comunidad/contenido" },
        { empresa: "Incubadoras/Universidades", ciudad, segmento: rubro, propuesta: "AcompaÃ±amiento/gratuito", precio: "Subvencionado", canal: "Institucional", switching_cost: "Alto", moat: "Comunidad/credibilidad" },
      ];
    }

    // RegulaciÃ³n: base + ajustes por rubro (sin duplicados)
    let regulacion: RegulationRow[] = Array.isArray(data.regulacion) ? data.regulacion : [];
    if (regulacion.length === 0) {
      regulacion = [
        { area: "Tributaria",       que_aplica: "Inicio de actividades", requisito: "SII, giro, boleta/factura", plazo: "Previo a vender",  riesgo: "Medio", accion: "Formalizar RUT/giro y medios de pago" },
        { area: "Datos personales", que_aplica: "Ley 19.628 / cookies",  requisito: "PolÃ­tica de privacidad + TOS", plazo: "Lanzamiento",  riesgo: "Medio", accion: "Publicar TOS/PP y banner cookies" },
        { area: "Consumo",          que_aplica: "Devoluciones/garantÃ­as", requisito: "PolÃ­tica de reembolso clara", plazo: "Lanzamiento",  riesgo: "Bajo",  accion: "Publicar polÃ­tica visible" },
        { area: "Prop. intelectual",que_aplica: "Marca y contenidos",     requisito: "Registro de marca (INAPI)",  plazo: "0â€“6 meses",     riesgo: "Bajo",  accion: "Iniciar registro de marca" },
      ];
    }
    regulacion = augmentRegulacionPorRubro(rubro, regulacion);
    regulacion = dedupReg(regulacion);

    const plan = { title, summary: (data.summary || "").toString(), steps, plan100, competencia, regulacion };
    return json({ ok: true, plan, meta: { modelUsed: model } });

  } catch (e: any) {
    return json({ ok: false, error: "OpenAI request failed", details: String(e?.message ?? e) }, 500);
  }
}
